var girder_plugin_worker=function(e){function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}var t={};return r.m=e,r.c=t,r.i=function(e){return e},r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="",r(2),r(r.s=16)}([function(e,r){e.exports=girder_lib},function(e,r,t){e.exports=t(0)(5)},function(e,r,t){"use strict";t(4),t(7),t(3)},function(e,r,t){"use strict";var o=t(11),n=function(e){return e&&e.__esModule?e:{default:e}}(o);n.default.registerStatus({WORKER_FETCHING_INPUT:{value:820,text:"Fetching input",icon:"icon-download",color:"#89d2e2"},WORKER_CONVERTING_INPUT:{value:821,text:"Converting input",icon:"icon-shuffle",color:"#92f5b5"},WORKER_CONVERTING_OUTPUT:{value:822,text:"Converting output",icon:"icon-shuffle",color:"#92f5b5"},WORKER_PUSHING_OUTPUT:{value:823,text:"Pushing output",icon:"icon-upload",color:"#89d2e2"},WORKER_CANCELING:{value:824,text:"Canceling",icon:"icon-spin3 animate-spin",color:"#f89406"}});var i=n.default.isCancelable;n.default.isCancelable=function(e){var r=e.get("handler");return"worker_handler"===r?-1===[n.default.CANCELED,n.default.WORKER_CANCELING,n.default.SUCCESS,n.default.ERROR].indexOf(e.get("status")):"celery_handler"===r?-1===[n.default.RUNNING,n.default.CANCELED,n.default.WORKER_CANCELING,n.default.SUCCESS,n.default.ERROR].indexOf(e.get("status")):i(e)}},function(e,r,t){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}var n=t(15),i=o(n),a=t(1),l=o(a),s=t(14),u=t(5),c=o(u);(0,s.exposePluginConfig)("worker","plugins/worker/config"),i.default.route("plugins/worker/config","workerConfig",function(){l.default.trigger("g:navigateTo",c.default)})},function(e,r,t){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,"__esModule",{value:!0});var n=t(12),i=o(n),a=t(10),l=o(a),s=t(9),u=o(s),c=t(1),d=o(c),f=t(13),p=t(6),g=o(p),k=u.default.extend({events:{"submit #g-worker-settings-form":function(e){e.preventDefault(),this.$("#g-worker-settings-error-message").empty(),this._saveSettings([{key:"worker.api_url",value:this.$("#g-worker-api-url").val().trim()},{key:"worker.broker",value:this.$("#g-worker-broker").val().trim()},{key:"worker.backend",value:this.$("#g-worker-backend").val().trim()},{key:"worker.direct_path",value:this.$("#g-worker-direct-path").is(":checked")}])}},initialize:function(){(0,f.restRequest)({method:"GET",url:"system/setting",data:{list:JSON.stringify(["worker.api_url","worker.broker","worker.backend","worker.direct_path"])}}).done(i.default.bind(function(e){this.render(),this.$("#g-worker-api-url").val(e["worker.api_url"]),this.$("#g-worker-broker").val(e["worker.broker"]),this.$("#g-worker-backend").val(e["worker.backend"]),this.$("#g-worker-direct-path").prop("checked",e["worker.direct_path"])},this))},render:function(){return this.$el.html((0,g.default)()),this.breadcrumb||(this.breadcrumb=new l.default({pluginName:"Remote worker",el:this.$(".g-config-breadcrumb-container"),parentView:this})),this.breadcrumb.render(),this},_saveSettings:function(e){(0,f.restRequest)({method:"PUT",url:"system/setting",data:{list:JSON.stringify(e)},error:null}).done(i.default.bind(function(e){d.default.trigger("g:alert",{icon:"ok",text:"Settings saved.",type:"success",timeout:4e3})},this)).fail(i.default.bind(function(e){this.$("#g-worker-settings-error-message").text(e.responseJSON.message)},this))}});r.default=k},function(e,r,t){"use strict";function o(e){var r="";return r+='<div class="g-config-breadcrumb-container"></div><p>Configure how Girder should connect to the celery worker.\n</p><form id="g-worker-settings-form" role="form"><div class="form-group"><label class="control-label" for="g-worker-broker">Celery broker URL</label><input class="input-sm form-control" id="g-worker-broker" type="text" placeholder="Broker (default: amqp://guest@localhost/)"></div><div class="form-group"><label class="control-label" for="g-worker-backend">Celery backend URL</label><input class="input-sm form-control" id="g-worker-backend" type="text" placeholder="Backend (default: amqp://guest@localhost/)"></div><div class="form-group"><label class="control-label" for="g-worker-api-url">Alternative Girder API URL</label><input class="input-sm form-control" id="g-worker-api-url" type="text" placeholder="API URL (default: auto-detected)"></div><div class="checkbox"><label class="control-label" for="g-worker-direct-path"><input id="g-worker-direct-path" type="checkbox"><span>When possible, send local file paths to the worker to avoid downloading files</span></label></div><p class="g-validation-failed-message" id="g-worker-settings-error-message"></p><input class="btn btn-sm btn-primary" type="submit" value="Save"></form>'}t(8);e.exports=o},function(e,r){},function(e,r,t){e.exports=t(0)(0)},function(e,r,t){e.exports=t(0)(1)},function(e,r,t){e.exports=t(0)(135)},function(e,r,t){e.exports=t(17)(16)},function(e,r,t){e.exports=t(0)(3)},function(e,r,t){e.exports=t(0)(4)},function(e,r,t){e.exports=t(0)(63)},function(e,r,t){e.exports=t(0)(7)},function(e,r,t){e.exports=t},function(e,r){e.exports=girder_plugin_jobs}]);